---
openapi: 3.1.0

info:
  title: User API
  description: This is the API of the User service
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0

tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers

servers:
  - url: http://localhost:3004
    description: Local server

paths:
  /user:
    post:
      tags:
        - admins
      summary: add a user
      description: By passing in the appropriate options, you can add a user
      operationId: add_user
      requestBody:
        description: item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFormData'

      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - data
                properties:
                  message:
                    type: string
                    example: User created
                  data:
                    $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFormError'
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFormData'

  /user/list:
    get:
      tags:
        - developers
      summary: get the full JSON database of users
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'

  /user/{user_id}:
    get:
      tags:
        - developers
      summary: get user's detail from its id
      description: By passing in the appropriate options, you can get user's detail
      operationId: get_user_detail
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: user's detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
        "404":
          description: User not found
    
    put:
      tags:
        - admins
      summary: update user's detail from its id
      description: By passing in the appropriate options, you can update user's detail
      operationId: update_user_detail
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      requestBody:
        description: item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: user's detail updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
        "404":
          description: User not found
    
    delete:
      tags:
        - admins
      summary: delete user's detail from its id
      description: By passing in the appropriate options, you can delete user's detail
      operationId: delete_user_detail
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: user's detail deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
        "404":
          description: User not found

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - last_active
      properties:
        id:
          type: string
          example: chris_rivers
        name:
          type: string
          example: Chris Rivers
        last_active:
          type: string
          example: "2017-07-21T17:32:28Z"

    UserFormData:
      type: object
      required:
        - first_name
        - last_name
      properties:
        first_name:
          type: string
          example: Chris
        last_name:
          type: string
          example: Rivers

    UserFormError:
      type: object
      required:
        - errors
        - message
      properties:
        errors:
          type: array
          items:
            type: object
            optional:
              - first_name
              - last_name
            properties:
              first_name:
                type: string
                example: "First name is required"
              last_name:
                type: string
                example: "Last name is required"

        message:
          type: string
          example: "Validation Failed"


    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
